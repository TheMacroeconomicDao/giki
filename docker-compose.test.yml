version: '3.8'

services:
  test-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=testuser
      - POSTGRES_PASSWORD=testpass
      - POSTGRES_DB=giki_test
    ports:
      - "5433:5432"
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser"]
      interval: 5s
      timeout: 5s
      retries: 5

  test-app:
    build:
      context: .
      dockerfile: .docker/Dockerfile.test
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgresql://testuser:testpass@test-db:5432/giki_test
      - JWT_SECRET=test_jwt_secret
      - NEXT_PUBLIC_API_URL=http://localhost:3000/api
    depends_on:
      test-db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    command: >
      sh -c "npm run test:integration && npm run test:e2e"

volumes:
  test-db-data: 